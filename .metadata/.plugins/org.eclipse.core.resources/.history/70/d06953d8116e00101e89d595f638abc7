package collections;

import java.util.Objects;

public class Employee implements Comparable<Employee> {

	private int empid;
	private String name;
	private String city;
	
	public Employee() {
		// TODO Auto-generated constructor stub
	}

	public Employee(int empid, String name, String city) {
		super();
		this.empid = empid;
		this.name = name;
		this.city = city;
	}
	

	public int getEmpid() {
		return empid;
	}

	public void setEmpid(int empid) {
		this.empid = empid;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}
	
	// equals and hashcode ?


	@Override
	public String toString() {
		return "Employee [empid=" + empid + ", name=" + name + ", city=" + city + "]";
	}
//	@Override
//	public int hashCode() {
//		return Objects.hash(city, empid, name);
//	}
//
//	@Override
//	public boolean equals(Object obj) {
//		if (this == obj)
//			return true;
//		if (obj == null)
//			return false;
//		if (getClass() != obj.getClass())
//			return false;
//		Employee other = (Employee) obj;
//		return Objects.equals(city, other.city) && empid == other.empid && Objects.equals(name, other.name);
//	}

	// Collections.sort(employees) -> 5 
	@Override
	public int compareTo(Employee o) {
		// TODO Auto-generated method stub
		return this.empid - o.getEmpid();
		//return this.name.compareTo(o.getName());
	}
	
}
